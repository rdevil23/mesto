(()=>{"use strict";const e=document.querySelector(".add-popup"),t=document.querySelector(".popup__edit-form"),s=e.querySelector(".add-form"),r=document.querySelector(".avatar-form"),n=document.querySelector(".profile__edit-btn"),i=document.querySelector(".profile__add-btn"),o=document.querySelector(".profile__avatar-edit-btn"),a=(t.querySelector(".popup__input_type_name"),t.querySelector(".popup__input_type_job"),document.querySelector(".profile__name")),l=document.querySelector(".profile__job"),h=document.querySelector(".profile__avatar"),u={formSelector:".popup__edit-form",inputSelector:".popup__input",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"};class _{constructor(e){let{cardData:t,templateSelector:s,userId:r,handleCardClick:n,handleLikeCardClick:i,handleRemoveCardClick:o}=e;this._name=t.name,this._link=t.link,this._likes=t.likes,this._cardId=t._id,this._templateSelector=s,this._userId=r,this._isUserCard=r===t.owner._id,this._handleCardClick=n,this._handleLikeCardClick=i,this._handleRemoveCardClick=o}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".elements__item").cloneNode(!0)}generateCard(){return this._element=this._getTemplate(),this._elementImg=this._element.querySelector(".elements__img"),this._element.querySelector(".elements__text").textContent=this._name,this._elementImg.src=this._link,this._elementImg.alt="Картинка "+this._name,this._buttonDelete=this._element.querySelector(".elements__delete"),this._buttonLike=this._element.querySelector(".elements__like"),this._likesCounter=this._element.querySelector(".elements__likes-counter"),this._likesCounter.textContent=this._likes.length,this._setEventListeners(),this._countLikes(),this._element}_setEventListeners(){this._isUserCard?this._buttonDelete.addEventListener("click",(e=>{this._handleRemoveCardClick(e)})):(this._buttonDelete.remove(),this._buttonDelete=null),this._buttonLike.addEventListener("click",(()=>{this._handleLikeCardClick()})),this._elementImg.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}_countLikes(){this._checkUserLikes()?this.addLike():this.removeLike()}_checkUserLikes(){return this._likes.some((e=>e._id===this._userId))}addLike=()=>{this._element.querySelector(".elements__like").classList.add("elements__like_active"),this.isLiked=!0};removeLike=()=>{this._element.querySelector(".elements__like").classList.remove("elements__like_active"),this.isLiked=!1};updatelikes(e){this._likesCounter.textContent=e.length}getCardId(){return this._cardId}}class c{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputList=t.querySelectorAll(this._inputSelector),this._submitButton=t.querySelector(this._submitButtonSelector)}_hasInvalidInput=()=>Array.from(this._inputList).some((e=>!e.validity.valid));_showError=function(e,t){t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)};_hideError=function(e,t){t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)};_checkInputValidity=e=>{const t=this._form.querySelector(`#${e.id}-error`);return e.validity.valid?this._hideError(t,e):this._showError(t,e)};_toggleButtonState(){this._hasInvalidInput(this._inputList)?this._disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled"))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.setAttribute("disabled",!0)}_setValidListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setValidListeners()}removeInputErrors(){this._inputList.forEach((e=>{const t=this._form.querySelector(`#${e.id}-error`);e.validity.valid||this._hideError(t,e)})),this._disableButton()}}class d{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._buttonClose=this._popupElement.querySelector(".popup__close-btn"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleOverlayClose=e=>{(e.target.classList.contains("popup_opened")||e.target.classList.contains("popup__close-button"))&&this.close()};setEventListeners(){this._buttonClose.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",this._handleOverlayClose)}}class p extends d{constructor(e,t){super(e),this._handleSubmitForm=t,this._popupForm=this._popupElement.querySelector(".popup__edit-form"),this._inputList=this._popupElement.querySelectorAll(".popup__input"),this._submitButton=this._popupElement.querySelector(".popup__save-btn")}_getInputValues(){return this._inputValues={},this._inputList.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}setInputValues(e){this._inputList.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitForm(this._getInputValues())}))}renderLoadingBtn(e){this._submitButton.textContent=e?"Сохранение...":"Сохранить"}close(){super.close(),this._popupForm.reset()}}const m=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_checkResponse(e){return e.ok?e.json():Promise.reject(`Ошибка: ${e.status} - не удалось установить подключение к api`)}getUserInfo(){return fetch(`${this._baseUrl}users/me`,{headers:this._headers}).then(this._checkResponse)}updateUserInfo(e){return fetch(`${this._baseUrl}users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e.name,about:e.about})}).then(this._checkResponse)}updateUserAvatar(e){return fetch(`${this._baseUrl}users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}getCards(){return fetch(`${this._baseUrl}cards`,{headers:this._headers}).then(this._checkResponse)}addNewCard(e){let{name:t,link:s}=e;return fetch(`${this._baseUrl}cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._checkResponse)}removeCard(e){return fetch(`${this._baseUrl}cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}cards/likes/${e}`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}deleteCardLike(e){return fetch(`${this._baseUrl}cards/likes/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-66/",headers:{authorization:"aa38c948-6d23-4336-8d1a-1b31ad529250","Content-Type":"application/json"}}),v=new class{constructor(e){this._name=e.name,this._about=e.about,this._avatar=e.avatar}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){this._name.textContent=e.name,this._about.textContent=e.about,this._avatar.src=e.avatar,this._userId=e.userId}newUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this._about.textContent=s}setUserAvatar(e){let{newUserAvatar:t}=e;this._avatar.src=t}getUserId(){return this._userId}}({name:a,about:l,avatar:h}),k=new class extends d{constructor(e){super(e),this._popupForm=this._popupElement.querySelector(".popup__confirm")}setSubmitHandler(e){this._formSubmit=e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._formSubmit()}))}}({popupSelector:".confirm-popup"});k.setEventListeners();const C=new class extends d{constructor(e){super(e),this._name=this._popupElement.querySelector(".popup__img-title"),this._image=this._popupElement.querySelector(".popup__img")}open(e,t){super.open(e,t),this._name.textContent=e,this._image.src=t,this._image.alt="Картинка "+e}}({popupSelector:".popup_type_open-img"});C.setEventListeners();const b=new c(u,t);b.enableValidation();const L=new c(u,r);L.enableValidation();const S=new c(u,s);S.enableValidation(),m.getUserInfo().then((e=>{const t=e;v.setUserInfo({name:t.name,about:t.about,avatar:t.avatar,userId:t._id})})).catch((e=>{console.log(`Ошибка при загрузке исходных данных: ${e}`)})),m.getCards().then((e=>{const t=e;E.renderItems(t)})).catch((e=>{console.log(`Ошибка при загрузке исходных данных: ${e}`)}));const E=new class{constructor(e,t){let{renderer:s}=e;this._renderer=s,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this.addItem(e)}))}addItem(e){const t=this._renderer(e);this._container.prepend(t)}}({renderer:e=>{const t=new _({cardData:e,templateSelector:"#elements-template",userId:v.getUserId(),handleCardClick:(e,t)=>{C.open(e,t)},handleLikeCardClick:()=>{t.isLiked?m.deleteCardLike(t.getCardId()).then((e=>{t.removeLike(),t.updatelikes(e.likes)})).catch((e=>{console.error(e)})):m.likeCard(t.getCardId()).then((e=>{t.addLike(),t.updatelikes(e.likes)})).catch((e=>{console.error(e)}))},handleRemoveCardClick:e=>{const s=e.target.closest(".elements__item");k.open(),k.setSubmitHandler((()=>{m.removeCard(t.getCardId()).then((()=>{s.remove(),k.close()})).catch((e=>{console.error(e)}))}))}});return t.generateCard()}},".elements__list"),y=new p({popupSelector:".avatar-popup"},(e=>{y.renderLoadingBtn(!0),m.updateUserAvatar({avatar:e.url}).then((e=>{v.setUserAvatar({newUserAvatar:e.avatar}),y.close(),r.reset()})).catch((e=>{console.error(e)})).finally((()=>{y.renderLoadingBtn(!1)}))}));y.setEventListeners(),o.addEventListener("click",(()=>{L.removeInputErrors(),y.open()}));const f=new p({popupSelector:".profile-popup"},(e=>{f.renderLoadingBtn(!0),m.updateUserInfo(e).then((e=>{v.newUserInfo(e),f.close()})).catch((e=>{console.log(`Ошибка: ${e} - не удалось обновить профиль`)})).finally((()=>{f.renderLoadingBtn(!1)}))}));f.setEventListeners(),n.addEventListener("click",(()=>{b.removeInputErrors();const e=v.getUserInfo();f.setInputValues(e),f.open()}));const g=new p({popupSelector:".add-popup"},(e=>{g.renderLoadingBtn(!0),m.addNewCard(e).then((e=>{E.addItem(e),g.close(),s.reset()})).catch((e=>{console.log(`Ошибка: ${e} - не удалось добавить новую карточку`)})).finally((()=>{g.renderLoadingBtn(!1)}))}));g.setEventListeners(),i.addEventListener("click",(()=>{S.removeInputErrors(),g.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,