(()=>{"use strict";const e=document.querySelector(".add-popup"),t=document.querySelector(".popup__edit-form"),s=e.querySelector(".add-form"),n=document.querySelector(".profile__edit-btn"),i=document.querySelector(".profile__add-btn"),r=t.querySelector(".popup__input_type_name"),o=t.querySelector(".popup__input_type_job"),l={formSelector:".popup__edit-form",inputSelector:".popup__input",submitButtonSelector:".popup__save-btn",inactiveButtonClass:"popup__save-btn_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__input-error_active"};class p{constructor(e,t,s){let{name:n,link:i}=e;this._name=n,this._link=i,this._templateSelector=t,this._handleCardClick=s}_getTemplate(){return document.querySelector(this._templateSelector).content.querySelector(".elements__item").cloneNode(!0)}_onDelete=()=>{this._element.remove(),this._element=null};_onLike=()=>{this._element.querySelector(".elements__like").classList.toggle("elements__like_active")};_setEventListeners(){this._buttonDelete.addEventListener("click",this._onDelete),this._buttonLike.addEventListener("click",this._onLike),this._elementImg.addEventListener("click",(()=>{this._handleCardClick(this._name,this._link)}))}generateCard(){return this._element=this._getTemplate(),this._buttonLike=this._element.querySelector(".elements__like"),this._buttonDelete=this._element.querySelector(".elements__delete"),this._elementImg=this._element.querySelector(".elements__img"),this._setEventListeners(),this._element.querySelector(".elements__text").textContent=this._name,this._elementImg.src=this._link,this._elementImg.alt="Картинка "+this._name,this._element}}class a{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputList=t.querySelectorAll(this._inputSelector),this._submitButton=t.querySelector(this._submitButtonSelector)}_hasInvalidInput=()=>Array.from(this._inputList).some((e=>!e.validity.valid));_showError=function(e,t){t.classList.add(this._inputErrorClass),e.textContent=t.validationMessage,e.classList.add(this._errorClass)};_hideError=function(e,t){t.classList.remove(this._inputErrorClass),e.textContent="",e.classList.remove(this._errorClass)};_checkInputValidity=e=>{const t=this._form.querySelector(`#${e.id}-error`);return e.validity.valid?this._hideError(t,e):this._showError(t,e)};_toggleButtonState(){this._hasInvalidInput(this._inputList)?this._disableButton():(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.removeAttribute("disabled"))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.setAttribute("disabled",!0)}_setValidListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._setValidListeners()}removeInputErrors(){this._inputList.forEach((e=>{const t=this._form.querySelector(`#${e.id}-error`);e.validity.valid||this._hideError(t,e)})),this._disableButton()}}class _{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t),this._buttonClose=this._popupElement.querySelector(".popup__close-btn"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleOverlayClose=e=>{e.target===e.currentTarget&&this.close()};setEventListeners(){this._buttonClose.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",this._handleOverlayClose)}}class u extends _{constructor(e,t){super(e),this._handleSubmitForm=t,this._popupForm=this._popupElement.querySelector(".popup__edit-form"),this._inputList=this._popupElement.querySelectorAll(".popup__input")}_getInputValues(){return this._inputValues={},this._inputList.forEach((e=>{this._inputValues[e.name]=e.value})),this._inputValues}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitForm(this._getInputValues())}))}close(){super.close(),this._popupForm.reset()}}const c=new a(l,t);c.enableValidation();const h=new a(l,s);h.enableValidation();const d=new class{constructor(e){let{nameSelector:t,jobSelector:s}=e;this._name=document.querySelector(t),this._job=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,job:this._job.textContent}}setUserInfo(e,t){this._name.textContent=e,this._job.textContent=t}}({nameSelector:".profile__name",jobSelector:".profile__job"}),m=new u({popupSelector:".profile-popup"},(()=>{d.setUserInfo(r.value,o.value),m.close()}));m.setEventListeners(),n.addEventListener("click",(()=>{c.removeInputErrors();const e=d.getUserInfo();r.value=e.name,o.value=e.job,m.open()}));const v=new u({popupSelector:".add-popup"},(e=>{const t={name:e.name,link:e.link};b.addItem(E(t)),v.close(),s.reset()}));v.setEventListeners(),i.addEventListener("click",(()=>{h.removeInputErrors(),v.open()}));const S=(e,t)=>{y.open(e,t)},y=new class extends _{constructor(e){super(e),this._name=this._popupElement.querySelector(".popup__img-title"),this._image=this._popupElement.querySelector(".popup__img")}open(e,t){super.open(e,t),this._name.textContent=e,this._image.src=t,this._image.alt="Картинка "+e}}({popupSelector:".popup_type_open-img"});y.setEventListeners();const E=e=>new p({name:e.name,link:e.link},"#elements-template",S).generateCard(),b=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>this._renderer(e)))}setItem(e){this._container.append(e)}addItem(e){this._container.prepend(e)}}({items:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:e=>{b.setItem(E(e))}},".elements__list");b.renderItems()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,